---
- hosts: all
  become: true
  vars_files:
    - env.yml
  vars:
    server_name: biosentiers
  vars_prompt:
    - name: backend_version
      prompt: Backend version to deploy (commit hash, branch or tag; "no" to skip)
      default: deploy
      private: false
    - name: update_db
      prompt: Rebuild the database
      default: "no"
      private: false
    - name: update_rp
      prompt: Rebuild the reverse proxy
      default: "no"
      private: false
  tasks:
    - name: build app docker image
      docker_image:
        name: 127.0.0.1:5000/biosentiers/app
        tag: "{{ backend_version }}"
        path: /vagrant/images/app
        force: true
        push: true
        buildargs:
          BIOSENTIERS_BACKEND_REF: "{{ backend_version }}"
          TIME: "{{ ansible_date_time.epoch }}"
        state: present
      when: backend_version != "no"
    - name: build db docker image
      docker_image:
        name: 127.0.0.1:5000/biosentiers/db
        path: /vagrant/images/db
        force: true
        push: true
        state: present
      when: update_db == "yes"
    - name: build rp docker image
      docker_image:
        name: 127.0.0.1:5000/biosentiers/rp
        path: /vagrant/images/rp
        force: true
        push: true
        state: present
      when: update_rp == "yes"
    - name: deploy stack
      command: docker stack deploy --compose-file /etc/{{ server_name }}/docker-compose.yml {{ server_name }}
      environment:
        APP_TAG: "{{ backend_version }}"
    - name: clean up old images
      shell: docker images | grep '127.0.0.1:5000' | grep '<none>' | tr -s ' ' | sed 's/^ *//' | cut -d ' ' -f 3 | xargs docker rmi
      register: result
      changed_when: result.rc != 0
