server {
  listen 80 default_server;
  server_name {{ nginx_site_hosts }};

{% if nginx_site_certbot_certificate is defined %}
  location /.well-known/acme-challenge/ {
    default_type "text/plain";
    root {{ nginx_site_root }};
  }
{% endif %}

  location / {
    return 302 https://$server_name$request_uri;
  }
}

server {
  listen 443 ssl http2 default_server;
  listen [::]:443 ssl http2;
  server_name {{ nginx_site_hosts }};

  # certs sent to the client in SERVER HELLO are concatenated in ssl_certificate
  ssl_certificate {{ nginx_site_certbot_certificate_path }};
  ssl_certificate_key {{ nginx_site_certbot_certificate_key_path }};
  ssl_session_timeout 1d;
  ssl_session_cache shared:SSL:50m;
  ssl_session_tickets off;

  # intermediate configuration. tweak to your needs.
  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  ssl_ciphers 'ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS';
  ssl_prefer_server_ciphers on;

  # HSTS (ngx_http_headers_module is required) (15768000 seconds = 6 months)
  add_header Strict-Transport-Security max-age=15768000;

  root {{ nginx_site_root }};
  index index.html;

{% if nginx_site_certbot_certificate is defined %}
  location /.well-known/acme-challenge/ {
    default_type "text/plain";
  }
{% endif %}

  location ~* \.(?:ico|css|eot|js|gif|jpe?g|png|svg|ttf|woff2?)$ {
    gzip_static on;
    expires max;
    add_header Cache-Control public;
  }

{% if nginx_site_backend_path is defined and nginx_site_backend_proxy is defined %}
  location {{ nginx_site_backend_path }} {
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto https;
    proxy_set_header Host $http_host;
    proxy_redirect off;
    proxy_pass {{ nginx_site_backend_proxy }};
  }
{% endif %}

  location / {
    try_files $uri $uri/index.html $uri.html /index.html;
  }
}
