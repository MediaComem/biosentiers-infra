---
- hosts: all
  become: true
  vars_files:
    - biosentiers.yml
  vars:
    server_name: biosentiers
    docker_compose_version: 1.12.0
    docker_network_name: "{{ server_name }}"
  tasks:

    # Tools
    - name: update apt cache
      apt:
        update_cache: true
      changed_when: false
    - name: install pip
      apt:
        name: python-pip
        state: present

    # Firewall
    - name: enable firewall
      ufw:
        policy: deny
        state: enabled
    - name: open ssh port
      ufw:
        rule: limit
        port: ssh
        proto: tcp
    - name: open http/https port
      ufw:
        rule: allow
        port: "{{ item }}"
      with_items:
        - 80
        - 443

    # PostgreSQL
    - name: install postgresql
      apt:
        name: "{{ item }}"
        state: present
      with_items:
        - postgresql
        - postgresql-contrib
        - postgis
    - name: install psycopg2
      pip:
        name: psycopg2
        state: present
    - name: create biosentiers db user
      become: true
      become_user: postgres
      postgresql_user:
        name: biosentiers
        password: "{{ biosentiers_db_password }}"
        state: present
    - name: create biosentiers db
      become: true
      become_user: postgres
      postgresql_db:
        name: biosentiers
        owner: biosentiers
        encoding: UTF-8
        state: present
    - name: check if postgis is enabled
      become: true
      become_user: postgres
      command: psql -c '\d spatial_ref_sys' biosentiers
      register: postgis_enabled
      changed_when: false
      failed_when: postgis_enabled.rc != 0 and postgis_enabled.rc != 1
    - name: enable postgis
      become: true
      become_user: postgres
      command: psql -c 'CREATE EXTENSION postgis;' biosentiers
      when: postgis_enabled.rc != 0

    # BioSentiers
    - name: create biosentiers user
      user:
        name: biosentiers
        state: present

    # Node.js
    - name: install nodenv
      become: true
      become_user: biosentiers
      git:
        repo: https://github.com/nodenv/nodenv.git
        dest: /home/biosentiers/.nodenv
        update: yes
    - name: add nodenv shims to path
      lineinfile:
        path: /home/biosentiers/.bash_profile
        regexp: '\.nodenv\/shims'
        line: 'export PATH="$HOME/.nodenv/bin:$HOME/.nodenv/shims:$PATH"'
        owner: biosentiers
        group: biosentiers
        create: yes
        state: present
    - name: add default node version file
      template:
        src: .node-version
        dest: /home/biosentiers/.node-version
        owner: biosentiers
        group: biosentiers
    - name: configure nodenv bash extensions
      become: true
      become_user: biosentiers
      command: src/configure
      args:
        chdir: /home/biosentiers/.nodenv
        creates: /home/biosentiers/.nodenv/src/Makefile
    - name: install nodenv bash extensions
      become: true
      become_user: biosentiers
      command: make -C src
      args:
        chdir: /home/biosentiers/.nodenv
        creates: /home/biosentiers/.nodenv/src/realpath.o
    - name: install node-build
      become: true
      become_user: biosentiers
      git:
        repo: https://github.com/nodenv/node-build.git
        dest: /home/biosentiers/.nodenv/plugins/node-build
        update: yes
    - name: install node
      become: true
      become_user: biosentiers
      command: nodenv install {{ biosentiers_node_version }}
      args:
        creates: /home/biosentiers/.nodenv/versions/{{ biosentiers_node_version }}
      environment:
        PATH: /home/biosentiers/.nodenv/bin:{{ ansible_env.PATH }}

    # pm2
    - name: install pm2
      become: true
      become_user: biosentiers
      npm:
        name: pm2
        global: yes
        executable: /home/biosentiers/.nodenv/shims/npm
        state: present
      environment:
        NODENV_VERSION: "{{ biosentiers_node_version }}"
        PATH: /home/biosentiers/.nodenv/shims:{{ ansible_env.PATH }}
    - name: rehash pm2
      become: true
      become_user: biosentiers
      command: nodenv rehash
      args:
        creates: /home/biosentiers/.nodenv/shims/pm2
      environment:
        PATH: /home/biosentiers/.nodenv/bin:{{ ansible_env.PATH }}
    - name: create pm2 systemd service
      template:
        src: pm2-biosentiers.service
        dest: /etc/systemd/system/pm2-biosentiers.service
    - name: start pm2
      systemd:
        state: started
        daemon_reload: yes
        name: pm2-biosentiers

    # www directory
    - name: create www directory
      file:
        path: /var/www
        mode: 0771
        state: directory
    - name: create biosentiers www directory
      file:
        path: /var/www/biosentiers
        owner: biosentiers
        group: biosentiers
        mode: 0770
        state: directory

    # Backend
    - name: create backend directory
      file:
        path: /var/www/biosentiers/backend
        owner: biosentiers
        group: biosentiers
        state: directory
    - name: create backend config file
      template:
        src: .env
        dest: /var/www/biosentiers/backend/.env
        owner: biosentiers
        group: biosentiers
        mode: 0640
    - name: set backend node version
      template:
        src: .node-version
        dest: /var/www/biosentiers/backend/.node-version
        owner: biosentiers
        group: biosentiers
        mode: 0640

    # Vagrant
    - name: add local ssh key to root
      authorized_key:
        user: root
        key: "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"
