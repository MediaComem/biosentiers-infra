---
- hosts: all
  become: true
  vars_files:
    - env.yml
  vars:
    docker_network_name: "{{ server_name }}"
  roles: []
  tasks:

    # Tools
    - name: update apt
      apt:
        update_cache: yes
      changed_when: false
    - name: install pip
      apt:
        name: python-pip
        state: present
    - name: install docker-py
      pip:
        name: docker-py
        state: present

    # Docker
    - name: install docker dependencies
      apt:
        name: "{{ item }}"
        state: present
      with_items:
        - apt-transport-https
        - ca-certificates
        - curl
    - name: add docker apt key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
    - name: get release
      command: lsb_release -cs
      register: result
      changed_when: result.rc != 0
    - name: add docker apt repository
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ result.stdout }} stable
        state: present
      notify:
        - update apt
    - name: install docker
      apt:
        name: docker-ce
        state: present
    - name: check if docker swarm is enabled
      command: docker node ls
      register: result
      failed_when: result.rc != 0 and result.rc != 1
      changed_when: result.rc != 0 and result.rc != 1
    - name: enable docker swarm
      command: docker swarm init --advertise-addr 127.0.0.1
      when: result.rc == 1
      changed_when: result.rc != 0
    - name: create docker network
      docker_network:
        name: "{{ server_name }}"

    # Docker Compose
    - name: get kernel name
      command: uname -s
      register: kernel_name_result
      changed_when: kernel_name_result.rc != 0
    - name: get machine name
      command: uname -m
      register: machine_name_result
      changed_when: machine_name_result.rc != 0
    - name: download docker compose
      get_url:
        url: https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-{{ kernel_name_result.stdout }}-{{ machine_name_result.stdout }}
        dest: /usr/local/bin/docker-compose
        owner: root
        group: root
        mode: 0755

    # Server Config
    - name: create server config directory
      file:
        path: /etc/{{ server_name }}
        owner: root
        group: root
        mode: 0700
        state: directory
    - name: set up docker compose config file
      template:
        src: docker-compose.yml.j2
        dest: /etc/{{ server_name }}/docker-compose.yml
        owner: root
        group: root
        mode: 0600

  handlers:
    - name: update apt
      apt:
        update_cache: yes
